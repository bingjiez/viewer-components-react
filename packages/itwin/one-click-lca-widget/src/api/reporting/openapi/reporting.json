{
  "openapi": "3.0.1",
  "info": {
    "title": "Reporting",
    "description": "Insights is a resource for aggregating iTwin data to build custom dashboards and integrate iTwin data with your business applications.\r\n\r\n- Create digitial twin based reports which can be consumed through business intelligence applications such as Power BI.\r\n- Leverage the OData feed Data Access to generate reports by combining data from multiple data streams in the digital twin.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://sbx-api.bentley.com/insights/reporting"
    }
  ],
  "paths": {
    "/reports": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get Project Reports",
        "description": "---\r\n\r\nGets all Reports within the context of a Project.\r\n\r\n### Authentication\r\n\r\nRequires `Authorization` header with valid Bearer token for scope `insights:read`.\r\n\r\nFor more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.\r\n\r\n### Authorization\r\n\r\nUser must have `REPORTINGVIEW` permission(s) assigned at the Project level. iModel specific permissions may also be applied at the iModel level if iModel level permissions are enabled.\r\n\r\nAlternatively the user should be an Organization Administrator for the Organization that owns a given Project or iModel.\r\n\r\nAn Organization Administrator must have at least one of the following roles assigned in User Management: Account Administrator, Co-Administrator, or CONNECT Services Administrator. For more information about User Management please visit our Bentley Communities [Licensing, Cloud, and Web Services](https://communities.bentley.com/communities/other_communities/licensing_cloud_and_web_services/w/wiki/50711/user-management-2-0) wiki page.\r\n\r\n### Rate limits\r\n\r\nAll iTwin Platform API operations have a rate limit. For more documentation on that visit [Rate limits and quotas](https://developer.bentley.com/apis/overview/rate-limits/) page.\r\n\r\n---\r\n",
        "operationId": "get-project-reports",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "The Project Id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Optional max items to be sent in response.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$continuationToken",
            "in": "query",
            "description": "Optional token to retrieve next page in paginated response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "Optionally filter Reports by those marked for deletion. NOTE: Reports marked for deletion will be permanently deleted after 1 month unless deletion is reverted.",
            "schema": {
              "enum": [true, false],
              "type": "boolean"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "OAuth access token with scope `insights:read`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended.",
            "schema": {
              "enum": ["application/vnd.bentley.itwin-platform.v1+json"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched all project Reports successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report_Collection"
                },
                "example": {
                  "reports": [
                    {
                      "id": "617c13fd-2547-4d85-87a3-28f21f29daf2",
                      "displayName": "iModel Report",
                      "description": "Report containing iModel Mappings",
                      "deleted": false,
                      "_links": {
                        "project": {
                          "href": "https://api.bentley.com/projects/3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        }
                      }
                    }
                  ],
                  "_links": {
                    "next": {
                      "href": "https://api.bentley.com/insights/reporting/reports/?$top=100&$continuationToken=ddac51e3-3d37-4407-816e-52b9fc80d70a&projectId=3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "self": {
                      "href": "https://api.bentley.com/insights/reporting/reports/?$top=100&projectId=3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed.",
            "content": {
              "application/json": {
                "example": {
                  "statusCode": 401,
                  "message": "Access denied due to invalid access_token. Make sure to provide a valid token for this API endpoint."
                }
              }
            }
          },
          "404": {
            "description": "Specified Report was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": "ReportNotFound",
                    "message": "Requested Report is not available.",
                    "target": "id"
                  }
                }
              }
            }
          },
          "422": {
            "description": "The 422 (Unprocessable Entity) status code indicates that the request cannot be processed by the server due to a client error (e.g. malformed request syntax).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": {
                    "code": "InvalidInsightsRequest",
                    "message": "Error message"
                  }
                }
              }
            }
          },
          "429": {
            "description": "This response indicates that the user has sent too many requests in a given amount of time.",
            "headers": {
              "retry-after": {
                "description": "The number of requests exceeds the rate-limit for the client subscription.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "code": "TooManyRequests",
                  "message": "More requests were received than the subscription rate-limit allows."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Report": {
        "title": "Report",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Report Id."
          },
          "displayName": {
            "type": "string",
            "description": "Name of the Report."
          },
          "description": {
            "type": "string",
            "description": "Description of the Report."
          },
          "deleted": {
            "type": "boolean",
            "description": "Flag indicating whether or not a Report has been marked for deletion."
          },
          "_links": {
            "type": "object",
            "properties": {
              "project": {
                "$ref": "#/components/schemas/Link"
              }
            },
            "description": "Contains contextual hyperlinks to related data."
          }
        },
        "description": "Defines a unit of data that can be exposed as an OData feed. The contents of a Report are defined in Report Mappings."
      },
      "Report_Collection": {
        "title": "Report Collection",
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Report"
            },
            "description": "List of Reports."
          },
          "_links": {
            "$ref": "#/components/schemas/PagedResponseLinks"
          }
        },
        "description": "List of Reports."
      },
      "Link": {
        "title": "Link",
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink to the specific entity."
          }
        },
        "description": "Hyperlink container."
      },
      "PagedResponseLinks": {
        "title": "Paged Response Links",
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/Link"
          },
          "self": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "description": "URLs for redoing the current request and/or getting the next page of results if applicable."
      },
      "ErrorResponse": {
        "title": "Error Response",
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "One of a server-defined set of error codes."
              },
              "message": {
                "type": "string",
                "description": "A human-readable representation of the error."
              }
            },
            "description": "Error information."
          }
        },
        "description": "Gives details for an error that occurred while handling the request. Note that clients MUST NOT assume that every failed request will produce an object of this schema, or that all of the properties in the response will be non-null, as the error may have prevented this response from being constructed."
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "X-Api-Subscription-Key",
        "in": "header"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "name": "subscription-key",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ]
}
